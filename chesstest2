//数组初始化，是否落子信息的存储
var chessarray=[];
for(var i=0;i<15;i++){
chessarray[i]=[];
for(var j=0;j<15;j++){
chessarray[i][j]=0;
}
}
var me=true;//判断落黑子，还是白子
var over = false;
var winArray=[];var count=0;//赢法数组 赢法数量
var myWin=[];compWin=[];//赢法统计数组 各种赢法的统计数组
for (var i =0;i<15;i++){
   winArray[i]=[];
   for (var j =0;j<15;j++){
   winArray[i][j]=[];
   
}
}
//横向可能
for (var i =0;i<15;i++){
   for (var j =0;j<11;j++){
    for(var k =0;k<5;k++){
      // 0 0 0
      //0 1 0
      //0 2 0
      //0 3 0
      //0 4 0
      winArray[i][j+k][count]=true;
    }
    count++;
   
}
}
//竖向
for (var i =0;i<11;i++){
   for (var j =0;j<15;j++){
    for(var k =0;k<5;k++){
      winArray[i+k][j][count]=true;
    }
    count++;
   
}
}
//斜线
for (var i =0;i<11;i++){
   for (var j =0;j<11;j++){
    for(var k =0;k<5;k++){
      winArray[i+k][j+k][count]=true;
    }
    count++;
   
}
}
//反斜线
for (var i =0;i<11;i++){
   for (var j =14;j>3;j--){
    for(var k =0;k<5;k++){
      winArray[i+k][j-k][count]=true;
    }
    count++;
   
}
}
for(var i =0;i<count;i++){
  myWin[i]=0;
  compWin[i]=0;
}
var chess=document.getElementById("canvas");
content=chess.getContext("2d");
// var logo=new Image();
// logo.src="images/back.png";
//onload函数的意义：为了使图片作为背景显示，先将图片加载完之后再画线条
// logo.onload=function(){
//  content.drawImage(logo,0,0,450,450); //背景图的显示
drawChess();
// }
//绘制棋盘线条
function drawChess (){
for(i=0; i<15; i++){
//横线
content.strokeStyle="#BFBFBF";
content.moveTo(15,15+i*30);
content.lineTo(435,15+i*30);
content.stroke();
//纵线
content.strokeStyle="#BFBFBF";
content.moveTo(15+i*30,15);
content.lineTo(15+i*30,435);
content.stroke();
}
}
//绘制旗子
var oneStep=function(i, j, me){
content.beginPath();
content.arc(15+i*30, 15+j*30, 13, 0, 2*Math.PI);
content.closePath();
var gradient=content.createRadialGradient(15+i*30+2,15+j*30-2,13,15+i*30+2,15+j*30-2,0);//旗子渐变的实现 
if(me){ 
  gradient.addColorStop(0,"#0A0A0A"); 
  gradient.addColorStop(1,"#636766"); 
}else{ 
  gradient.addColorStop(0,"#D1D1D1"); 
  gradient.addColorStop(1,"#FAFAFA"); } 
  content.fillStyle=gradient; content.fill();
 
}
//落子实现
chess.onclick=function(e){
  if(!me){
    return;
  }
  if(over){
    return;
  }
  var x=e.offsetX;
  var y=e.offsetY;
  var i=Math.floor(x/30);
  var j=Math.floor(y/30);
  if(chessarray[i][j]==0){//判断是否可以落子
    oneStep(i, j, me);//落子
    chessarray[i][j]=1;//存储落黑子的信息
    for(var k=0;k<count;k++){
       if(winArray[i][j][k]){
          myWin[k]+=1
          compWin[k]=-1;//不可能赢了
          if(myWin[k]==5){
            alert("you win");
            over=true;
          }
       }
    }
   
    if (!over){
       me=!me;//指定落完黑子后，落白子
       compStep();
    }
    
  }
}
function compStep(){
  var u=0;//点x 
  var v=0;//y
  var max=0;
  var myWillWin=[]//某个点的得分
  var compWillWin=[];
  for(var i=0;i<15;i++){
    myWillWin[i]=[];
    compWillWin[i]=[];
    for (var j =0;j<15;j++){
      myWillWin[i][j]=0;
      compWillWin[i][j]=0;
    }
  }
  for (var i =0;i<15;i++){
   for (var j =0;j<15;j++){
          if (chessarray[i][j]==0) {
            for(var k=0;k<count;k++){
              if (winArray[i][j][k]) {
                 if(myWin[k]==1){
                  myWillWin[i][j]+=200;
                 }
                 else if(myWin[k]==2){
                  myWillWin[i][j]+=400;
                 }
                 else
                  if(myWin[k]==3){
                  myWillWin[i][j]+=1000;
                 }
                 else if(myWin[k]==4){
                  myWillWin[i][j]+=10000;
                 }
                 if(compWin[k]==1){
                  compWin[i][j]+=210;
                 }
                 else if(compWin[k]==2){
                  compWillWin[i][j]+=420;
                 }
                 else if(compWin[k]==3){
                  compWillWin[i][j]+=1100;
                 }
                 else if(compWin[k]==4){
                  compWillWin[i][j]+=11000;
                 }
              }
          }
              
    }
              if (myWillWin[i][j]>max) {
                  max=myWillWin[i][j];
                  u=i;v=j;
              }
              if (compWillWin[i][j]>max) {
                  max=compWillWin[i][j];
                  u=i;v=j;
               }
}
}
  if (chessarray[u][v]==0) {
      chessarray[u][v]=1;
      oneStep(u,v,false)
      for (var k = 0; k < count; k++) {
          if (winArray[u][v][k]) {
            compWin[k]+=1;
            myWin[k]=-1;
            if(compWin[k]==5){
              alert("computer win");
              over=true;
            }
          };
      };
  }
  else{
       for (var i = 0; i < 15; i++) {
     console.log(chessarray[i].join())
   };
     over=true;
     alert("none win")
  }
 
  if(!over){
    
    me=!me;
  }
    
}
var first =true;
function compStep1(){
  var u=0;
  var v=0;
  var max=0;
  var myWillWin=[]
  var compWillWin=[];
  for(var i=0;i<15;i++){
     myWillWin[i]=[];
     compWillWin[i]=[];
    for (var j =0;j<15;j++){
      myWillWin[i][j]=0;
      compWillWin[i][j]=0;
  }
}
  for (var i =0;i<15;i++){
   for (var j =0;j<15;j++){
        if (chessarray[i][j]==0) {
          for(var k=0;k<count;k++){
            if (winArray[i][j][k]) {
               if(myWin[k]==1){
                myWillWin[i][j]+=210;
               }
               else if(myWin[k]==2){
                myWillWin[i][j]+=420;
               }
               else if(myWin[k]==3){
                myWillWin[i][j]+=1200;
               }
               else if(myWin[k]==4){
                myWillWin[i][j]+=12000;
               }
                if(compWin[k]==1){
                compWillWin[i][j]+=200;
               }
               else if(compWin[k]==2){
                compWillWin[i][j]+=400;
               }
               else if(compWin[k]==3){
                compWillWin[i][j]+=1000;
               }
               else if(compWin[k]==4){
                compWillWin[i][j]+=10000;
               }
            }
        }
              
        }
      if (myWillWin[i][j]>max) {
          max=myWillWin[i][j];
          u=i;v=j;
      }
      if (compWillWin[i][j]>max) {
          max=compWillWin[i][j];
          u=i;v=j;
       }
   }
  }
    if(first){
      u =Math.floor(Math.random()*15);
      v=Math.floor(Math.random()*15);
      first=false;
  }
  if (chessarray[u][v]==0) {
  chessarray[u][v]=1;
  oneStep(u,v,true)
  for (var k = 0; k < count; k++) {
      if (winArray[u][v][k]) {
        compWin[k]=-1;
        myWin[k]+=1;
        if(myWin[k]==5){
          alert("computer1 win");
          over=true;
        }
      };
  };
}else{
   
   for (var i = 0; i < 15; i++) {
     console.log(chessarray[i].join())
   };
  over =true;
  alert("none win")
}
  if(!over){
    me=!me;
   
  }
}
function auto(){
while(!over){
if(me){
  compStep1();
}else{
compStep();
}
}
}
